{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "carbon-emission-reporting"
		},
		"emissionsadls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://carbonemissionadls.dfs.core.windows.net/"
		},
		"emissionsourcesa_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://carbonemissionsa.blob.core.windows.net/"
		},
		"Event Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/8a19f03e-3561-45b6-b688-5b309ccd3cd2/resourceGroups/CarbonEmission/providers/Microsoft.Storage/storageAccounts/carbonemissionsa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Emissions-MUI')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/8a19f03e-3561-45b6-b688-5b309ccd3cd2/resourcegroups/CarbonEmission/providers/Microsoft.ManagedIdentity/userAssignedIdentities/emissions-mi"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/emissionsadls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('emissionsadls_properties_typeProperties_url')]",
					"credential": {
						"referenceName": "Emissions-MUI",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/Emissions-MUI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emissionsourcesa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('emissionsourcesa_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2",
					"credential": {
						"referenceName": "Emissions-MUI",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/Emissions-MUI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emission_dynamic_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emissionsourcesa",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Agrofood_co2_emission.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "emissions"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emissionsourcesa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emissions_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emissionsourcesa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "emissions"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Area",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Savanna fires",
						"type": "String"
					},
					{
						"name": "Forest fires",
						"type": "String"
					},
					{
						"name": "Crop Residues",
						"type": "String"
					},
					{
						"name": "Rice Cultivation",
						"type": "String"
					},
					{
						"name": "Drained organic soils (CO2)",
						"type": "String"
					},
					{
						"name": "Pesticides Manufacturing",
						"type": "String"
					},
					{
						"name": "Food Transport",
						"type": "String"
					},
					{
						"name": "Forestland",
						"type": "String"
					},
					{
						"name": "Net Forest conversion",
						"type": "String"
					},
					{
						"name": "Food Household Consumption",
						"type": "String"
					},
					{
						"name": "Food Retail",
						"type": "String"
					},
					{
						"name": "On-farm Electricity Use",
						"type": "String"
					},
					{
						"name": "Food Packaging",
						"type": "String"
					},
					{
						"name": "Agrifood Systems Waste Disposal",
						"type": "String"
					},
					{
						"name": "Food Processing",
						"type": "String"
					},
					{
						"name": "Fertilizers Manufacturing",
						"type": "String"
					},
					{
						"name": "IPPU",
						"type": "String"
					},
					{
						"name": "Manure applied to Soils",
						"type": "String"
					},
					{
						"name": "Manure left on Pasture",
						"type": "String"
					},
					{
						"name": "Manure Management",
						"type": "String"
					},
					{
						"name": "Fires in organic soils",
						"type": "String"
					},
					{
						"name": "Fires in humid tropical forests",
						"type": "String"
					},
					{
						"name": "On-farm energy use",
						"type": "String"
					},
					{
						"name": "Rural population",
						"type": "String"
					},
					{
						"name": "Urban population",
						"type": "String"
					},
					{
						"name": "Total Population - Male",
						"type": "String"
					},
					{
						"name": "Total Population - Female",
						"type": "String"
					},
					{
						"name": "total_emission",
						"type": "String"
					},
					{
						"name": "Average Temperature Â°C",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emissionsourcesa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emissions_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emissionsadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('emissions_raw_', string(utcnow()))\r\n",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emissionsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Emission Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "emissions_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Iterate through the Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get File Information",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "emission_dynamic_data",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified",
											"columnCount"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Compare the dates",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get File Information",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(activity('Get File Information').output.lastModified, 'yyyyMMddHHmmss'),\nformatDateTime(variables('PreviousModifiedDate'), 'yyyyMMddHHmmss'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set FileName",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "LatestFileName",
													"value": {
														"value": "@activity('Get File Information').output.itemName",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Column Count",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set FileName",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "ColumnCount",
													"value": {
														"value": "@activity('Get File Information').output.columnCount",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Column Count Check",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Iterate through the Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ColumnCount'), 31)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Emissions Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "emission_dynamic_data",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@variables('LatestFileName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "emissions_raw",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"LatestFileName": {
						"type": "String"
					},
					"PreviousModifiedDate": {
						"type": "String",
						"defaultValue": "1990-01-01T05:12:22Z"
					},
					"ColumnCount": {
						"type": "Integer",
						"defaultValue": 31
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/emissions_data')]",
				"[concat(variables('factoryId'), '/datasets/emission_dynamic_data')]",
				"[concat(variables('factoryId'), '/datasets/emissions_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Event Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Emission Ingestion",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/emissions/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Event Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Emission Ingestion')]"
			]
		}
	]
}